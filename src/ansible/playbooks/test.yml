---
# - hosts: master
#   become: yes
#   vars_files:
#     - vars/default.yml
#   gather_facts: no

#   tasks:

  # - debug:
  #     msg: "{{ inventory_hostname }}"

  # - debug:
  #     msg: "{{ hostvars['kubmaster01'].ansible_host }}"

  # - debug:
  #     msg: "{{ hostvars['kubmaster01']['groups']['workers'] }}"


- hosts: localhost
  become: yes
  vars_files:
    - vars/default.yml

  tasks:

  - name: remove CR/LF
    replace:
      path: test.txt
      regexp: '[\n\r]'
      replace: ''

  - name: remove 1
    replace:
      path: test.txt
      regexp: '(cgroup_\S*|swapaccount\S*)'
      replace: ''

  - name: remove 2
    replace:
      path: test.txt
      regexp: '\s{2,}'
      replace: ''

  - name: Add cgroup settings
    lineinfile:
      path: test.txt
      state: present
      insertafter: "^.*$"
      line: ' cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1'

  - name: remove CR/LF
    replace:
      path: test.txt
      regexp: '[\n\r]'
      replace: ''


  # - name: Add our binding
  #   lineinfile:
  #     path: redis.conf
  #     state: present
  #     line: bind {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}

  # - name: Set systemd
  #   replace:
  #     path: redis.conf
  #     regexp: '^supervised\s*(no|auto|upstart)'
  #     replace: 'supervised systemd'




  # - name: delete cgroup settings in cmdline.txt file
  #   shell: sed -i 's/{{ cgroup_text }}//g' /home/marknic/cmdline.txt
  #   args:
  #     warn: false

  # - name: add cgroup settings in cmdline.txt file
  #   shell: sed -i '$ s/$/ {{ cgroup_text }}/' /home/marknic/cmdline.txt
  #   args:
  #     warn: false

  # - name: delete cgroup settings in cmdline.txt file
  #   shell: sed -i 's/  / /g' /home/marknic/cmdline.txt
  #   args:
  #     warn: false


  # - name: regex test
  #   lineinfile:
  #     path: /home/marknic/cmdline.txt
  #     regexp: '^((?!cgroup_enable).)*$'
  #     backup: true
  #     backrefs: true
  #     line: " cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1"
  #     state: present


# ---
# - name: initialize k8s
#   hosts: localhost
#   #become: yes
#   gather_facts: no

#   tasks:

  # - name: generate k8s token
  #   shell: kubeadm token generate
  #   register: kubeadm_token

  # - debug:
  #     msg: "Token is: {{ kubeadm_token.stdout }}"

  # - name: generate k8s token
  #   #shell: 'cat {{ playbook_dir }}/cluster_initialized.txt'
  #   #shell: cat {{ playbook_dir }}/cluster_initialized.txt | grep -e 'sha256:'  | awk '$2 ~ /^*$/'
  #   shell: cat {{ playbook_dir }}/cluster_initialized.txt | grep -e 'sha256:' | awk '{print $2}'
  #   register: sha_token

  # - debug:
  #     msg: "{{ sha_token.stdout }}"

